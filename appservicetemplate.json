{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        
        "applicationName": {
            "type": "String"
        },
        "svcPlanName": {
            "type": "string",
            "metadata": {
                "description": "The name of the App Service plan."
        }      
        },        
        
        "sku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
            "Standard",
            "Premium"
        ],
        "metadata": {
            "description": "The pricing tier for the App Service plan."
            }
        },
        
        "sqlServerName" : {
            "type": "string",
            "metadata": {
                "description": "The name of the SQL server"
        }
        },
        "administratorLogin": {
            "type": "string"
        },
        
        "administratorLoginPassword": {
            "type": "securestring"
        },

        "sqldbName" : {
            "type": "string",
            "metadata": {
                "description": "Name of the SQL database"
        }
        },
        "sqldbCollection" : {
            "type": "string",
            "minLength": 1,
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
        },
        "sqldbEdition": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues":[
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "sqldbRequestedObjectiveName": {
            "type":"string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "P1",
                "P2",
                "P3"
            ]
        },
    "svcPlanSize": {
      "defaultValue": "S1",
      "type": "string",
      "metadata": {
        "description": "The instance size of the app."
      }
    },
    "minimumCapacity": {
      "type": "Int",
      "defaultValue": 2,
      "metadata": {
        "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
      }
    },
    "maximumCapacity": {
      "type": "Int",
      "defaultValue": 5,
      "metadata": {
        "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
      }
    },
    "defaultCapacity": {
      "type": "Int",
      "defaultValue": 5,
      "metadata": {
        "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
      }
    },
    "metricName": {
      "type": "string",
      "defaultValue": "CpuPercentage",
      "metadata": {
        "description": "The metric name."
      }
    },
    "metricThresholdToScaleOut": {
      "type": "Int",
      "defaultValue": 60,
      "metadata": {
        "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
      }
    },
    "metricThresholdToScaleIn": {
      "type": "Int",
      "defaultValue": 20,
      "metadata": {
        "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
      }
    },
    "changePercentScaleOut": {
      "type": "Int",
      "defaultValue": 20,
      "metadata": {
        "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
      }
    },
    "changePercentScaleIn": {
      "type": "Int",
      "defaultValue": 10,
      "metadata": {
        "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
      }
    },
    "autoscaleEnabled": {
      "type": "Bool",
      "metadata": {
        "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
      }
    }


        

    },
    "variables": {
        "settingName": "[concat(toLower(parameters('svcPlanName')), '-setting')]",
        "targetResourceId": "[resourceId('Microsoft.Web/serverFarms/', parameters('svcPlanName'))]"
    },
    "resources": [
            {
            "name": "[parameters('svcPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "apiVersion": "2018-02-01",
            "sku": {
                "name": "[parameters('svcPlanSize')]",
                "tier": "[parameters('sku')]",
                "capacity": 1
            },
            
                
            "properties": {
                "name": "[parameters('svcPlanName')]",
                "numberOfWorkers": 1
                }
            
            

        },
        {
      "type": "Microsoft.Insights/autoscalesettings",
      "name": "[variables('settingName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('svcPlanName'))]"
      ],
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "profiles": [
          {
            "name": "DefaultAutoscaleProfile",
            "capacity": {
              "minimum": "[parameters('minimumCapacity')]",
              "maximum": "[parameters('maximumCapacity')]",
              "default": "[parameters('defaultCapacity')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": "[parameters('metricThresholdToScaleOut')]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleOut')]",
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": "[parameters('metricThresholdToScaleIn')]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleIn')]",
                  "cooldown": "PT10M"
                }
              }
            ]
          }
        ],
        "enabled": "[parameters('autoscaleEnabled')]",
        "targetResourceUri": "[variables('targetResourceId')]"
      }
    },
        {
            
            "name": "[parameters('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            
            "tags": {
                "displayName": "[parameters('sqlServerName')]"
            },
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
            },
            "resources": [
                
                {
                    "type": "firewallRules",
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                },
              {
                  "name": "[concat(parameters('sqlServerName'), '/', parameters('sqldbName'))]",
                  "type": "Microsoft.Sql/servers/databases",
                  "apiVersion": "2014-04-01",
                  "location": "[resourceGroup().location]",
                  
                  "tags": {
                      "displayName": "[parameters('sqldbName')]"
                  },
                  "dependsOn": [
                      "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
                  ],
                  "properties": {
                      "collation": "[parameters('sqldbCollection')]",
                      "edition": "[parameters('sqldbEdition')]",
                      "maxSizeBytes": "1073741824",
                      "requestedServiceObjectiveName": "[parameters('sqldbRequestedObjectiveName')]"
                      
                      
                  }
              }
            ]
        },
        
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            
            "name": "[parameters('applicationName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('svcPlanName'))]",
                "[resourceID('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqldbName'))]"
            ],
            "kind": "app",
            "properties": {
                
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('svcPlanName'))]",
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('applicationName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('applicationName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "connectionStrings": [
                        {
                            "name":"ConnectionString",
                            "connectionString" : "[concat('Server=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Initial Catalog=', parameters('sqldbName'), ';Persist Security Info=False;User ID=', parameters('administratorLogin'), ';Password=', parameters('administratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
                        }
                        
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
                
                
            }
        }
        
        
    ]
}